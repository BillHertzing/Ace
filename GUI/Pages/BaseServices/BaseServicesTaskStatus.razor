@page "/BaseServicesTaskStatus"
@inherits Ace.AceGUI.Pages.BaseServicesCodeBehind
<h1>AceCommander Base Services Task Status</h1>


<!-- If the onInitAsync, and the Initialization has not occurred, set a caution window style -->
<!-- If the onInitAsync, and the Initialization has occurred, set a normal window style -->
@if (@InitializationResponse == null)
{<p>InitializationResponse is STILL null</p>}
else
{ <p>InitializationResponse is NOT null</p>

    <hr />
    <h2>LongRunningTasks on the Agent</h2>

    <p>
        @{foreach (var taskId in @LongRunningTasksCOD.Keys)
            {@taskId.ToString() } }
    </p>

    <!-- Send a request for an update on all the tasks -->
    <button type="button" class="btn btn-default" id="GetLongRunningTasksStatus" onclick=@(async () => await GetLongRunningTasksStatus())>@labelForGetLongRunningTasksStatusButton</button>

    <!-- Send a request for an update on a specific Id<LongRunningTaskInfo> tasks
    <button type="button" class="btn btn-default" id="GetLongRunningTasksStatus" onclick=@(async () => await GetLongRunningTasksStatus(LongRunningTasksCOD.Keys.Select()))>specific task number (hardcoded for 1st in list)</button>

    -->
    <hr />
    <p> Long running Tasks </p>
    <p> count: @LongRunningTasksCOD.Keys.Count </p>
    @foreach (var kv in LongRunningTasksCOD)
        {
            <p> LRTId: Status:@kv.Value.TaskStatus.ToString() </p>
        }
}
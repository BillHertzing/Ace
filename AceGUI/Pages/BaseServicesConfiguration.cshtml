@page "/CurrentSettings"
@inject HttpClient Http

<h1>AceCommander Base Services</h1>

    Current appSettings :
@if (currentAppSettings == null){
<p><em>Loading...</em></p>
} else{
<p>
  @currentAppSettings
</p>
}

  Current appHost Configuration :



@functions {
    string currentAppSettings;

    protected override async Task OnInitAsync()
    {

      Console.WriteLine($"before fetch");
      var getConfigurationResult =  await Http.GetJsonAsync<string>("/GetConfiguration");
      Console.WriteLine($"Fetch returned");
      currentAppSettings = getConfigurationResult;
    }


    protected void GetConfiguration(UIChangeEventArgs e)
    {
      //Console.WriteLine($"Firing ChangeHashRateTimeSpan , Initial currentDuration = {currentDuration}, eventvalue = {e.Value}");
      //var newDuration = (TimeBlockDurations)Enum.Parse(typeof(TimeBlockDurations), (string)e.Value);
      //if (newDuration != currentDuration)
      //{
      //  TimeSpan newTimeSpan;
      //  switch (newDuration)
      //  {
      //    case TimeBlockDurations.Sec: { newTimeSpan = new TimeSpan(0, 0, 0, 1); break; }
      //    case TimeBlockDurations.Min: { newTimeSpan = new TimeSpan(0, 0, 1, 0); break; }
      //    case TimeBlockDurations.Hour: { newTimeSpan = new TimeSpan(0, 1, 0, 0); break; }
      //    case TimeBlockDurations.Day: { newTimeSpan = new TimeSpan(1, 0, 0, 0); break; }
      //  }
      //  HashRate.ChangeTimeSpan(currentHashRate, new HashRate(0, new TimeBlock(DateTime.Now, newTimeSpan)));
      //  currentDuration = newDuration;
      //}
      //Console.WriteLine($"Firing from ChangeUOM, final currentDuration = {currentDuration}");
    }
}

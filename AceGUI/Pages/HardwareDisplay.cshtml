@using ATAP.Utilities.ComputerInventory.Enumerations;
@page "/hardware"


<h1>Hardware Enumerations</h1>


<p>
    <label for="cPUMakersList" class="col-sm-1 control-label">CPUMakers:</label> /
    <select name="cPUMakersListDropDown" bind="@cPUMakersList" onchange="@ChangeCPUMaker">

        @foreach (var cpumaker in cPUMakersList)
            {
        <option value=@cpumaker>@cpumaker</option>
            }
    </select>
</p>
<p>
    currentCPUMakers = @currentCPUMaker
</p>
<button class="btn btn-primary" onclick="@Print">PrintCurrentcpuMaker</button>

<button class="btn btn-primary" onclick="@ForceCurrentCPMakerToIntel">Force the currentCPMaker To Intel</button>


@functions {

    public CPUMaker currentCPUMaker = CPUMaker.Intel;
    public List<CPUMaker> cPUMakersList { get; set; } = new List<CPUMaker>();

    public void Print()    {
      Console.WriteLine(currentCPUMaker.ToString());
    }

    protected override void OnInit()    {
      foreach (CPUMaker cpumaker in Enum.GetValues(typeof(CPUMaker)))  {
        cPUMakersList.Add(cpumaker);
      }
      currentCPUMaker= CPUMaker.AMD;

    }

    protected void ChangeCPUMaker(UIChangeEventArgs e) {
      Console.WriteLine($"Firing from ChangeCPUMaker, Initial currentCPUMaker = {currentCPUMaker}, eventvalue = {e.Value}");
      currentCPUMaker = (CPUMaker) Enum.Parse(typeof(CPUMaker), (string)e.Value);
      Console.WriteLine($"Firing from ChangeCPUMaker, final currentCPUMaker = {currentCPUMaker}");
    }

    public void ForceCurrentCPMakerToIntel()
    {
      currentCPUMaker = CPUMaker.Intel;
    }
}
